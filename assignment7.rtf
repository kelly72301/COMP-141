{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;\cssrgb\c100000\c100000\c100000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww18140\viewh13940\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa200\partightenfactor0
\ls1\ilvl0
\f0\fs28 \cf2 \cb3 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #!/bin/bash\'a0\cb1 \uc0\u8232 \cb3 #\'a0\cb1 \uc0\u8232 \cb3 # A script to prebuild a Java class file\'a0\cb1 \uc0\u8232 \cb3 #\'a0\'a0\cb1 \uc0\u8232 \cb3 # Assume that this script accepts an argument, e.g.\'a0\cb1 \uc0\u8232 \cb3 #\'a0\'a0 new_class ClassName\'a0\cb1 \uc0\u8232 \cb3 # and this argument becomes the name of the class\'a0\cb1 \uc0\u8232 \cb3 \'a0\'a0\cb1 \uc0\u8232 \cb3 # First, let's make sure that the file name is not empty. If it is,\'a0\'a0\cb1 \uc0\u8232 \cb3 # display a diagnostic message and end the script.\'a0\cb1 \uc0\u8232 \cb3 if [ -z "$1" ]; then\'a0\cb1 \uc0\u8232 \cb3 \'a0 echo "File name is empty! Script ends now."\'a0\cb1 \uc0\u8232 \cb3 \'a0 exit 1\'a0\cb1 \uc0\u8232 \cb3 fi\'a0\'a0\cb1 \uc0\u8232 \cb3 \'a0\'a0\cb1 \uc0\u8232 \cb3 # Now that we know the file name is not empty, assign to variable.\'a0\cb1 \uc0\u8232 \cb3 filename="$1.java" # The destination of the script's output\'a0\cb1 \uc0\u8232 \cb3 \'a0\'a0\cb1 \uc0\u8232 \cb3 # Check if file already exists\'a0\cb1 \uc0\u8232 \cb3 if [ -f "$filename" ]; then\'a0\cb1 \uc0\u8232 \cb3 \'a0 echo "File $filename already exists. Overwrite it? (y/n)"\'a0\cb1 \uc0\u8232 \cb3 \'a0 read overwrite\'a0\cb1 \uc0\u8232 \cb3 \'a0 if [ "$overwrite" == "n" ]; then\'a0\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0 echo "OK, I will not overwrite the file. Script ends now."\'a0\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0 exit 2\'a0\cb1 \uc0\u8232 \cb3 \'a0 fi\'a0\cb1 \uc0\u8232 \cb3 fi\'a0\cb1 \uc0\u8232 \cb3 \'a0\cb1 \uc0\u8232 \cb3 # Condition to validate the file name as a proper Java class name\'a0\cb1 \uc0\u8232 \cb3 # ( Basically, make sure its first character is an upper case letter. )\'a0\cb1 \uc0\u8232 \cb3 if [[ ! $1 =~ ^[A-Z] ]]; then\'a0\cb1 \uc0\u8232 \cb3 \'a0 echo "$1 is not a valid Java class name"\'a0\cb1 \uc0\u8232 \cb3 \'a0 exit 2\'a0\cb1 \uc0\u8232 \cb3 fi\'a0\'a0\'a0\cb1 \uc0\u8232 \cb3 \'a0\'a0\cb1 \uc0\u8232 \cb3 # Create a variable for the class name. This is the same as $1, so it is\'a0# not really necessary, but it makes the code more readable.\'a0\cb1 \uc0\u8232 \cb3 \'a0\'a0\cb1 \uc0\u8232 \cb3 classname="$1" # Arguments passed are mapped to $1, $2, ...\'a0\cb1 \uc0\u8232 \cb3 \'a0\'a0\cb1 \uc0\u8232 \cb3 cat << _EOF_ > $filename\'a0\'a0\cb1 \uc0\u8232 \cb3 /**\'a0\'a0\cb1 \uc0\u8232 \cb3 * Class $classname\'a0\cb1 \uc0\u8232 \cb3 */\'a0\cb1 \uc0\u8232 \cb3 public class $classname \{\'a0\'a0\cb1 \uc0\u8232 \cb3 \'a0 public static void main(String[] args) \{\'a0\'a0\cb1 \uc0\u8232 \cb3 \'a0 \} // method main\'a0\cb1 \uc0\u8232 \cb3 \}\'a0\cb1 \uc0\u8232 \cb3 _EOF_\'a0\cb1 \uc0\u8232 \cb3 echo "File $filename successfully created."\'a0\cb1 \uc0\u8232 \
}